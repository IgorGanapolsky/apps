name: CI (Checks)

on:
  push:
    branches: [ main ]
    paths:
      - 'apps-template/**'
      - 'SuperPassword/**'
      - '.github/workflows/**'
  pull_request:
    branches: [ main ]
    paths:
      - 'apps-template/**'
      - 'SuperPassword/**'
      - '.github/workflows/**'

jobs:
  checks:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: |
          cd apps-template
          npm install --no-audit --no-fund
          cd ../SuperPassword
          npm install --no-audit --no-fund

      - name: TypeScript check
        run: npm run type-check

      - name: Run tests
        run: npm run test:ci

      - name: Upload coverage reports
        uses: codecov/codecov-action@v3
        if: success()
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          fail_ci_if_error: false

      - name: Expo doctor
        run: npx expo-doctor

      - name: Lint
        run: npm run lint

      - name: Prettier check
        run: npm run fmt:check

      - name: Notify Slack on failure
        if: failure()
        uses: slackapi/slack-github-action@v1.24.0
        with:
          payload: |
            {
              "text": "‚ùå CI checks failed on ${{ github.ref_name }}",
              "blocks": [
                {
                  "type": "section",
                  "text": {
                    "type": "mrkdwn",
                    "text": "*CI checks failed!*\n*Branch:* ${{ github.ref_name }}\n*Triggered by:* ${{ github.actor }}"
                  }
                },
                {
                  "type": "section",
                  "text": {
                    "type": "mrkdwn",
                    "text": "<${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}|View workflow run>"
                  }
                }
              ]
            }
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
          SLACK_WEBHOOK_TYPE: INCOMING_WEBHOOK

